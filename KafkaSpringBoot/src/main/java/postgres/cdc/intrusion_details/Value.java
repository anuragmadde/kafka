/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package postgres.cdc.intrusion_details;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Value extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8233860075851377749L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Value\",\"namespace\":\"postgres.cdc.intrusion_details\",\"fields\":[{\"name\":\"reference_id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.version\":1,\"connect.name\":\"io.debezium.data.Uuid\"}},{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address_line\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"suburb\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"state\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postcode\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"provider\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"video_url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"image_url\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location_latitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"location_longitude\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"alert_time\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\",\"connect.version\":1,\"connect.name\":\"io.debezium.time.ZonedTimestamp\"}],\"default\":null},{\"name\":\"alert_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"intrusion_type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}],\"connect.name\":\"postgres.cdc.intrusion_details.Value\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Value> ENCODER =
      new BinaryMessageEncoder<Value>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Value> DECODER =
      new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Value> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Value> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Value>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Value to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Value from a ByteBuffer. */
  public static Value fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.String reference_id;
   private java.lang.String name;
   private java.lang.String address_line;
   private java.lang.String suburb;
   private java.lang.String state;
   private java.lang.Integer postcode;
   private java.lang.String provider;
   private java.lang.String video_url;
   private java.lang.String image_url;
   private java.lang.String location_latitude;
   private java.lang.String location_longitude;
   private java.lang.String status;
   private java.lang.String alert_time;
   private java.lang.String alert_type;
   private java.lang.String intrusion_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Value() {}

  /**
   * All-args constructor.
   * @param reference_id The new value for reference_id
   * @param name The new value for name
   * @param address_line The new value for address_line
   * @param suburb The new value for suburb
   * @param state The new value for state
   * @param postcode The new value for postcode
   * @param provider The new value for provider
   * @param video_url The new value for video_url
   * @param image_url The new value for image_url
   * @param location_latitude The new value for location_latitude
   * @param location_longitude The new value for location_longitude
   * @param status The new value for status
   * @param alert_time The new value for alert_time
   * @param alert_type The new value for alert_type
   * @param intrusion_type The new value for intrusion_type
   */
  public Value(java.lang.String reference_id, java.lang.String name, java.lang.String address_line, java.lang.String suburb, java.lang.String state, java.lang.Integer postcode, java.lang.String provider, java.lang.String video_url, java.lang.String image_url, java.lang.String location_latitude, java.lang.String location_longitude, java.lang.String status, java.lang.String alert_time, java.lang.String alert_type, java.lang.String intrusion_type) {
    this.reference_id = reference_id;
    this.name = name;
    this.address_line = address_line;
    this.suburb = suburb;
    this.state = state;
    this.postcode = postcode;
    this.provider = provider;
    this.video_url = video_url;
    this.image_url = image_url;
    this.location_latitude = location_latitude;
    this.location_longitude = location_longitude;
    this.status = status;
    this.alert_time = alert_time;
    this.alert_type = alert_type;
    this.intrusion_type = intrusion_type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reference_id;
    case 1: return name;
    case 2: return address_line;
    case 3: return suburb;
    case 4: return state;
    case 5: return postcode;
    case 6: return provider;
    case 7: return video_url;
    case 8: return image_url;
    case 9: return location_latitude;
    case 10: return location_longitude;
    case 11: return status;
    case 12: return alert_time;
    case 13: return alert_type;
    case 14: return intrusion_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reference_id = (java.lang.String)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: address_line = (java.lang.String)value$; break;
    case 3: suburb = (java.lang.String)value$; break;
    case 4: state = (java.lang.String)value$; break;
    case 5: postcode = (java.lang.Integer)value$; break;
    case 6: provider = (java.lang.String)value$; break;
    case 7: video_url = (java.lang.String)value$; break;
    case 8: image_url = (java.lang.String)value$; break;
    case 9: location_latitude = (java.lang.String)value$; break;
    case 10: location_longitude = (java.lang.String)value$; break;
    case 11: status = (java.lang.String)value$; break;
    case 12: alert_time = (java.lang.String)value$; break;
    case 13: alert_type = (java.lang.String)value$; break;
    case 14: intrusion_type = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'reference_id' field.
   * @return The value of the 'reference_id' field.
   */
  public java.lang.String getReferenceId() {
    return reference_id;
  }


  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Gets the value of the 'address_line' field.
   * @return The value of the 'address_line' field.
   */
  public java.lang.String getAddressLine() {
    return address_line;
  }


  /**
   * Gets the value of the 'suburb' field.
   * @return The value of the 'suburb' field.
   */
  public java.lang.String getSuburb() {
    return suburb;
  }


  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }


  /**
   * Gets the value of the 'postcode' field.
   * @return The value of the 'postcode' field.
   */
  public java.lang.Integer getPostcode() {
    return postcode;
  }


  /**
   * Gets the value of the 'provider' field.
   * @return The value of the 'provider' field.
   */
  public java.lang.String getProvider() {
    return provider;
  }


  /**
   * Gets the value of the 'video_url' field.
   * @return The value of the 'video_url' field.
   */
  public java.lang.String getVideoUrl() {
    return video_url;
  }


  /**
   * Gets the value of the 'image_url' field.
   * @return The value of the 'image_url' field.
   */
  public java.lang.String getImageUrl() {
    return image_url;
  }


  /**
   * Gets the value of the 'location_latitude' field.
   * @return The value of the 'location_latitude' field.
   */
  public java.lang.String getLocationLatitude() {
    return location_latitude;
  }


  /**
   * Gets the value of the 'location_longitude' field.
   * @return The value of the 'location_longitude' field.
   */
  public java.lang.String getLocationLongitude() {
    return location_longitude;
  }


  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Gets the value of the 'alert_time' field.
   * @return The value of the 'alert_time' field.
   */
  public java.lang.String getAlertTime() {
    return alert_time;
  }


  /**
   * Gets the value of the 'alert_type' field.
   * @return The value of the 'alert_type' field.
   */
  public java.lang.String getAlertType() {
    return alert_type;
  }


  /**
   * Gets the value of the 'intrusion_type' field.
   * @return The value of the 'intrusion_type' field.
   */
  public java.lang.String getIntrusionType() {
    return intrusion_type;
  }


  /**
   * Creates a new Value RecordBuilder.
   * @return A new Value RecordBuilder
   */
  public static postgres.cdc.intrusion_details.Value.Builder newBuilder() {
    return new postgres.cdc.intrusion_details.Value.Builder();
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Value RecordBuilder
   */
  public static postgres.cdc.intrusion_details.Value.Builder newBuilder(postgres.cdc.intrusion_details.Value.Builder other) {
    return new postgres.cdc.intrusion_details.Value.Builder(other);
  }

  /**
   * Creates a new Value RecordBuilder by copying an existing Value instance.
   * @param other The existing instance to copy.
   * @return A new Value RecordBuilder
   */
  public static postgres.cdc.intrusion_details.Value.Builder newBuilder(postgres.cdc.intrusion_details.Value other) {
    return new postgres.cdc.intrusion_details.Value.Builder(other);
  }

  /**
   * RecordBuilder for Value instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Value>
    implements org.apache.avro.data.RecordBuilder<Value> {

    private java.lang.String reference_id;
    private java.lang.String name;
    private java.lang.String address_line;
    private java.lang.String suburb;
    private java.lang.String state;
    private java.lang.Integer postcode;
    private java.lang.String provider;
    private java.lang.String video_url;
    private java.lang.String image_url;
    private java.lang.String location_latitude;
    private java.lang.String location_longitude;
    private java.lang.String status;
    private java.lang.String alert_time;
    private java.lang.String alert_type;
    private java.lang.String intrusion_type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(postgres.cdc.intrusion_details.Value.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reference_id)) {
        this.reference_id = data().deepCopy(fields()[0].schema(), other.reference_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address_line)) {
        this.address_line = data().deepCopy(fields()[2].schema(), other.address_line);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.suburb)) {
        this.suburb = data().deepCopy(fields()[3].schema(), other.suburb);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.postcode)) {
        this.postcode = data().deepCopy(fields()[5].schema(), other.postcode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.provider)) {
        this.provider = data().deepCopy(fields()[6].schema(), other.provider);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.video_url)) {
        this.video_url = data().deepCopy(fields()[7].schema(), other.video_url);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.image_url)) {
        this.image_url = data().deepCopy(fields()[8].schema(), other.image_url);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.location_latitude)) {
        this.location_latitude = data().deepCopy(fields()[9].schema(), other.location_latitude);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.location_longitude)) {
        this.location_longitude = data().deepCopy(fields()[10].schema(), other.location_longitude);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.alert_time)) {
        this.alert_time = data().deepCopy(fields()[12].schema(), other.alert_time);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.alert_type)) {
        this.alert_type = data().deepCopy(fields()[13].schema(), other.alert_type);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.intrusion_type)) {
        this.intrusion_type = data().deepCopy(fields()[14].schema(), other.intrusion_type);
        fieldSetFlags()[14] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Value instance
     * @param other The existing instance to copy.
     */
    private Builder(postgres.cdc.intrusion_details.Value other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.reference_id)) {
        this.reference_id = data().deepCopy(fields()[0].schema(), other.reference_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address_line)) {
        this.address_line = data().deepCopy(fields()[2].schema(), other.address_line);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.suburb)) {
        this.suburb = data().deepCopy(fields()[3].schema(), other.suburb);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.state)) {
        this.state = data().deepCopy(fields()[4].schema(), other.state);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.postcode)) {
        this.postcode = data().deepCopy(fields()[5].schema(), other.postcode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.provider)) {
        this.provider = data().deepCopy(fields()[6].schema(), other.provider);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.video_url)) {
        this.video_url = data().deepCopy(fields()[7].schema(), other.video_url);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.image_url)) {
        this.image_url = data().deepCopy(fields()[8].schema(), other.image_url);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.location_latitude)) {
        this.location_latitude = data().deepCopy(fields()[9].schema(), other.location_latitude);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.location_longitude)) {
        this.location_longitude = data().deepCopy(fields()[10].schema(), other.location_longitude);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.alert_time)) {
        this.alert_time = data().deepCopy(fields()[12].schema(), other.alert_time);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.alert_type)) {
        this.alert_type = data().deepCopy(fields()[13].schema(), other.alert_type);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.intrusion_type)) {
        this.intrusion_type = data().deepCopy(fields()[14].schema(), other.intrusion_type);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'reference_id' field.
      * @return The value.
      */
    public java.lang.String getReferenceId() {
      return reference_id;
    }

    /**
      * Sets the value of the 'reference_id' field.
      * @param value The value of 'reference_id'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setReferenceId(java.lang.String value) {
      validate(fields()[0], value);
      this.reference_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'reference_id' field has been set.
      * @return True if the 'reference_id' field has been set, false otherwise.
      */
    public boolean hasReferenceId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'reference_id' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearReferenceId() {
      reference_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'address_line' field.
      * @return The value.
      */
    public java.lang.String getAddressLine() {
      return address_line;
    }

    /**
      * Sets the value of the 'address_line' field.
      * @param value The value of 'address_line'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setAddressLine(java.lang.String value) {
      validate(fields()[2], value);
      this.address_line = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'address_line' field has been set.
      * @return True if the 'address_line' field has been set, false otherwise.
      */
    public boolean hasAddressLine() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'address_line' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearAddressLine() {
      address_line = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'suburb' field.
      * @return The value.
      */
    public java.lang.String getSuburb() {
      return suburb;
    }

    /**
      * Sets the value of the 'suburb' field.
      * @param value The value of 'suburb'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setSuburb(java.lang.String value) {
      validate(fields()[3], value);
      this.suburb = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'suburb' field has been set.
      * @return True if the 'suburb' field has been set, false otherwise.
      */
    public boolean hasSuburb() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'suburb' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearSuburb() {
      suburb = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return state;
    }

    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setState(java.lang.String value) {
      validate(fields()[4], value);
      this.state = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearState() {
      state = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'postcode' field.
      * @return The value.
      */
    public java.lang.Integer getPostcode() {
      return postcode;
    }

    /**
      * Sets the value of the 'postcode' field.
      * @param value The value of 'postcode'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setPostcode(java.lang.Integer value) {
      validate(fields()[5], value);
      this.postcode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'postcode' field has been set.
      * @return True if the 'postcode' field has been set, false otherwise.
      */
    public boolean hasPostcode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'postcode' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearPostcode() {
      postcode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'provider' field.
      * @return The value.
      */
    public java.lang.String getProvider() {
      return provider;
    }

    /**
      * Sets the value of the 'provider' field.
      * @param value The value of 'provider'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setProvider(java.lang.String value) {
      validate(fields()[6], value);
      this.provider = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'provider' field has been set.
      * @return True if the 'provider' field has been set, false otherwise.
      */
    public boolean hasProvider() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'provider' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearProvider() {
      provider = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'video_url' field.
      * @return The value.
      */
    public java.lang.String getVideoUrl() {
      return video_url;
    }

    /**
      * Sets the value of the 'video_url' field.
      * @param value The value of 'video_url'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setVideoUrl(java.lang.String value) {
      validate(fields()[7], value);
      this.video_url = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'video_url' field has been set.
      * @return True if the 'video_url' field has been set, false otherwise.
      */
    public boolean hasVideoUrl() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'video_url' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearVideoUrl() {
      video_url = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'image_url' field.
      * @return The value.
      */
    public java.lang.String getImageUrl() {
      return image_url;
    }

    /**
      * Sets the value of the 'image_url' field.
      * @param value The value of 'image_url'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setImageUrl(java.lang.String value) {
      validate(fields()[8], value);
      this.image_url = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'image_url' field has been set.
      * @return True if the 'image_url' field has been set, false otherwise.
      */
    public boolean hasImageUrl() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'image_url' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearImageUrl() {
      image_url = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'location_latitude' field.
      * @return The value.
      */
    public java.lang.String getLocationLatitude() {
      return location_latitude;
    }

    /**
      * Sets the value of the 'location_latitude' field.
      * @param value The value of 'location_latitude'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setLocationLatitude(java.lang.String value) {
      validate(fields()[9], value);
      this.location_latitude = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'location_latitude' field has been set.
      * @return True if the 'location_latitude' field has been set, false otherwise.
      */
    public boolean hasLocationLatitude() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'location_latitude' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearLocationLatitude() {
      location_latitude = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'location_longitude' field.
      * @return The value.
      */
    public java.lang.String getLocationLongitude() {
      return location_longitude;
    }

    /**
      * Sets the value of the 'location_longitude' field.
      * @param value The value of 'location_longitude'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setLocationLongitude(java.lang.String value) {
      validate(fields()[10], value);
      this.location_longitude = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'location_longitude' field has been set.
      * @return True if the 'location_longitude' field has been set, false otherwise.
      */
    public boolean hasLocationLongitude() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'location_longitude' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearLocationLongitude() {
      location_longitude = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setStatus(java.lang.String value) {
      validate(fields()[11], value);
      this.status = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearStatus() {
      status = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'alert_time' field.
      * @return The value.
      */
    public java.lang.String getAlertTime() {
      return alert_time;
    }

    /**
      * Sets the value of the 'alert_time' field.
      * @param value The value of 'alert_time'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setAlertTime(java.lang.String value) {
      validate(fields()[12], value);
      this.alert_time = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'alert_time' field has been set.
      * @return True if the 'alert_time' field has been set, false otherwise.
      */
    public boolean hasAlertTime() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'alert_time' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearAlertTime() {
      alert_time = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'alert_type' field.
      * @return The value.
      */
    public java.lang.String getAlertType() {
      return alert_type;
    }

    /**
      * Sets the value of the 'alert_type' field.
      * @param value The value of 'alert_type'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setAlertType(java.lang.String value) {
      validate(fields()[13], value);
      this.alert_type = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'alert_type' field has been set.
      * @return True if the 'alert_type' field has been set, false otherwise.
      */
    public boolean hasAlertType() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'alert_type' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearAlertType() {
      alert_type = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'intrusion_type' field.
      * @return The value.
      */
    public java.lang.String getIntrusionType() {
      return intrusion_type;
    }

    /**
      * Sets the value of the 'intrusion_type' field.
      * @param value The value of 'intrusion_type'.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder setIntrusionType(java.lang.String value) {
      validate(fields()[14], value);
      this.intrusion_type = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'intrusion_type' field has been set.
      * @return True if the 'intrusion_type' field has been set, false otherwise.
      */
    public boolean hasIntrusionType() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'intrusion_type' field.
      * @return This builder.
      */
    public postgres.cdc.intrusion_details.Value.Builder clearIntrusionType() {
      intrusion_type = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Value build() {
      try {
        Value record = new Value();
        record.reference_id = fieldSetFlags()[0] ? this.reference_id : (java.lang.String) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.address_line = fieldSetFlags()[2] ? this.address_line : (java.lang.String) defaultValue(fields()[2]);
        record.suburb = fieldSetFlags()[3] ? this.suburb : (java.lang.String) defaultValue(fields()[3]);
        record.state = fieldSetFlags()[4] ? this.state : (java.lang.String) defaultValue(fields()[4]);
        record.postcode = fieldSetFlags()[5] ? this.postcode : (java.lang.Integer) defaultValue(fields()[5]);
        record.provider = fieldSetFlags()[6] ? this.provider : (java.lang.String) defaultValue(fields()[6]);
        record.video_url = fieldSetFlags()[7] ? this.video_url : (java.lang.String) defaultValue(fields()[7]);
        record.image_url = fieldSetFlags()[8] ? this.image_url : (java.lang.String) defaultValue(fields()[8]);
        record.location_latitude = fieldSetFlags()[9] ? this.location_latitude : (java.lang.String) defaultValue(fields()[9]);
        record.location_longitude = fieldSetFlags()[10] ? this.location_longitude : (java.lang.String) defaultValue(fields()[10]);
        record.status = fieldSetFlags()[11] ? this.status : (java.lang.String) defaultValue(fields()[11]);
        record.alert_time = fieldSetFlags()[12] ? this.alert_time : (java.lang.String) defaultValue(fields()[12]);
        record.alert_type = fieldSetFlags()[13] ? this.alert_type : (java.lang.String) defaultValue(fields()[13]);
        record.intrusion_type = fieldSetFlags()[14] ? this.intrusion_type : (java.lang.String) defaultValue(fields()[14]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Value>
    WRITER$ = (org.apache.avro.io.DatumWriter<Value>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Value>
    READER$ = (org.apache.avro.io.DatumReader<Value>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
